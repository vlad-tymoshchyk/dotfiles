snippet td "TODO:"
// TODO: 
endsnippet

snippet dline "eslint-disable-line"
// eslint-disable-line 
endsnippet

snippet dnline "eslint-disable-next-line"
// eslint-disable-next-line 
endsnippet

snippet dnts "eslint-disable-next-line"
// eslint-disable-next-line
// @ts-ignore

endsnippet

snippet clg "console.log"
console.log('${1:${VISUAL}}', ${2:$1});
endsnippet

snippet cl "console.log"
console.log(${0:${VISUAL}});
endsnippet

snippet cl' "console.log"
console.log('${0:${VISUAL}}');
endsnippet

snippet cl" "console.log"
console.log("${0:${VISUAL}}");
endsnippet

snippet af "anonimous function" i
(${1}) => {
	${0:${VISUAL}}
}
endsnippet

snippet afe "anonimous function without braces" i
(${1}) => ${0:${VISUAL}}
endsnippet

snippet des "Describe (js)"
describe('${1:description}', () => {
	$0
});
endsnippet

snippet it "it (js)"
it('${1:description}', () => {
	$0
});
endsnippet

snippet rt_efc "export functional component"
import React, { FC } from 'react';

interface ${3} {
	${5}
}

export const ${1}: FC<${4:$3}> = (${2}) => {

}
endsnippet

snippet cyi "for (let i = 0; i < ??; i++)"
for (let i = 0; i < ${1}; i++) {
	${0}
}
endsnippet
snippet cyj "for (let j = 0; j < ??; j++)"
for (let j = 0; j < ${1}; j++) {
	${0}
}
endsnippet

snippet im "import xyz from 'xyz'"
import ${0:$1} from '${1}';
endsnippet

snippet imm "import { member } from 'xyz'"
import { ${0} } from '${1}';
endsnippet

snippet re "require xyz from 'xyz'"
const ${1} = require("${0:$1}");
endsnippet

snippet rem "require { member } from 'xyz'"
const { ${0} } = require("${1}");
endsnippet

snippet ef "export function"
export function ${1}(${2}) {
	${0}
}
endsnippet

snippet caf "react functional component"
const ${1} = (${2}) => {
	${0}
}
endsnippet

snippet simplerender "simple unit test with render"
import { render } from '@testing-library/react';
import ${3:$1} from './container';

test('renders <${1} />', () => {
  render(<${2:$1} />);
})
endsnippet
